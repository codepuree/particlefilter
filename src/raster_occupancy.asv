%% Clear matlab environment
clear all
close all
clc
poolObj = gcp('nocreate');
delete(poolObj);

%% load grid
axis equal
grid = LoadMap('..\Data\Vorgabe_Raum.png');
show(grid);
hold on

%% define Var
orient = 0:pi/18:2*pi;%0:6*rho:60*rho;

%%
Init = Initialization(grid,orient);

%% Weighting 
W_v(1:length(Init)) = (1/length(Init))';

%% Movement
move = [0.5,0,0];  % delta x,y[m] & o[rad]: 0.5,0 & 0 

%% Measurement
%CaptureKinnect

%% 4.Propagation
Init = Init + move;
Pose_occ = getOccupancy(grid,Init(:,1:2));
Pose_IdxOcc   = Pose_occ < 0.5;
Init = Init(Pose_IdxOcc,:);
% Sim for each Pose "measure"

%% Rating
% Simulation-Measurement
% a) Korrelation Angle-histo
% b) Linear weighting distance-difference
% c) innovation (script Abmayr)
% d) Non linear weighting distance difference 

Test_pose = [27,23.5,pi/4];
[antw,theta_S,rho_S] = Test_Measure(Test_pose,grid,Init,1); %process 1= calc;

nn = ~isnan(antw);
numberOfNonZeros = nnz(nn);
%w = zeros(numberOfNonZeros,1);
w = 1./antw(nn);
sW = sum(w);
wN = w./sW;
INN = Init(nn,:);
% figure();
% show(grid);
% hold on
% scatter3(INN(:,1),INN(:,2),wN);
% surf(INN(:,1),INN(:,2),wN);


figure();
show(grid);
hold on
scatter(INN(:,1),INN(:,2), [],wN);
hold on
scatter(Test_pose(1),Test_pose(2), 'xr')

%% 6.Resampling
newL = 500;
w2 = (wN*newL);
[w2s, idx]=sort(w2, 'descend');
New_Pose = zeros(newL,3);
num_of_Pose = 0;
index = 1;
WEIGHT=floor(w2s);

while num_of_Pose < 500
    number = WEIGHT(index);
    
    if number ~= 0
        for j = 1:number
            New_Pose(num_of_Pose+j,:) = INN(idx(index),:);
        end
    else
        New_Pose(num_of_Pose+1,:) = INN(idx(index),:);
    end
    num_of_Pose =num_of_Pose + number; 
    index = index+1;
end



